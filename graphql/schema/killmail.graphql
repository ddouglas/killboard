extend type Query {
    killmail(id: Int!, hash: String!): Killmail!
    killmailRecent(page: Int = 1): [Killmail]!
}

type Killmail @goModel(model: "github.com/eveisesi/neo.Killmail") {
    id: Int!
    hash: String!
    moon_id: Int
    solar_system_id: Int!
    war_id: Int
    killmail_time: Time!

    system: SolarSystem!
    attackers: [KillmailAttacker]! @goField(forceResolver: true)
    victim: KillmailVictim! @goField(forceResolver: true)
}

type KillmailAttacker
    @goModel(model: "github.com/eveisesi/neo.KillmailAttacker") {
    id: Int!
    killmailID: Int!
    allianceID: Int
    characterID: Int
    corporationID: Int
    factionID: Int
    damageDone: Int!
    finalBlow: Boolean!
    securityStatus: Float!
    shipTypeID: Int
    weaponTypeID: Int

    alliance: Alliance
    corporation: Corporation
    character: Character
    ship: Type
    weapon: Type
}

type KillmailVictim @goModel(model: "github.com/eveisesi/neo.KillmailVictim") {
    id: Int!
    killmailID: Int!
    allianceID: Int
    characterID: Int
    corporationID: Int!
    factionID: Int
    damageTaken: Int!
    shipTypeID: Int!

    alliance: Alliance
    corporation: Corporation
    character: Character
    ship: Type
    position: KillmailPosition @goField(forceResolver: true)
    items: [KillmailItem]! @goField(forceResolver: true)
}

type KillmailItem @goModel(model: "github.com/eveisesi/neo.KillmailItem") {
    id: Int!
    parentID: Int
    killmailID: Int!
    flag: Int!
    itemTypeID: Int!
    quantityDropped: Int
    quantityDestroyed: Int
    singleton: Int!
    isParent: Boolean!

    type: Type
    typeflag: TypeFlag
    items: [KillmailItem]! @goField(forceResolver: true)
}

type KillmailPosition
    @goModel(model: "github.com/eveisesi/neo.KillmailPosition") {
    x: Float
    y: Float
    z: Float
}
